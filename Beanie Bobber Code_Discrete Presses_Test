/* DIGF-3010 Advanced Wearables 2023
  Kate Hartman
  4 digital inputs to activate 4 keyboard keys
  no resistor needed
  Based on Keyboard library examples
 */

 /*
  Aranya Khurana mods:
  1. Lowered delay duration
  2. Added if condition at the end to release all keys and print blank lines when nothing is pressed
  3. Changed code so that only releasing and pressing keys activates arrow buttons
 */

#include "Keyboard.h"

#define DEBOUNCE 100  // delay for ensuring that the button presses do not overlap


// Variables that won't change

const int buttonPin1 = 3; // A4 (red alligator)
const int buttonPin2 = 2; // A5 (green alligator)
const int buttonPin3 = 0; // A6 (white alligator)
const int buttonPin4 = 1; // A7 (yellow alligator)

const int keyboardKeyUp = KEY_UP_ARROW;
const int keyboardKeyDown = KEY_DOWN_ARROW;
const int keyboardKeyLeft = KEY_LEFT_ARROW;
const int keyboardKeyRight = KEY_RIGHT_ARROW;

// Variables that will change

int buttonValue1 = 1;
int buttonValue2 = 1;
int buttonValue3 = 1;
int buttonValue4 = 1;


int up_Allowed = 1;
int down_Allowed = 1;
int left_Allowed = 1;
int right_Allowed = 1;


void setup() {

  // initialize the buttons' inputs:
  pinMode(buttonPin1, INPUT_PULLUP);
  pinMode(buttonPin2, INPUT_PULLUP);
  pinMode(buttonPin3, INPUT_PULLUP);
  pinMode(buttonPin4, INPUT_PULLUP);

  // initialize serial
  Serial.begin(9600);


  Keyboard.begin();
}

void loop() {

  // read all button pins
  buttonValue1 = digitalRead(buttonPin1);
  buttonValue2 = digitalRead(buttonPin2);
  buttonValue3 = digitalRead(buttonPin3);
  buttonValue4 = digitalRead(buttonPin4);


  // use the button values to control  keyboard

  //control for UP BUTTON:
  if (buttonValue1 == LOW && up_Allowed > 0) {
    Keyboard.press(keyboardKeyUp);
    Serial.println("Button 1 pressed");
    delay(50);
    Keyboard.release(keyboardKeyUp);
    up_Allowed = 0;  // no  button press allowed anymore
  }
  if (buttonValue1 == HIGH) {
    delay(50);
    up_Allowed = 1;  // button is up again
    Keyboard.releaseAll();
  }


  if (buttonValue2 == LOW && down_Allowed > 0) {
    Keyboard.press(keyboardKeyDown);
    Serial.println("Button 2 pressed");
    delay(50);
    Keyboard.release(keyboardKeyDown);
    down_Allowed = 0;  // no button press allowed anymore
  }
  if (buttonValue2 == HIGH) {
    delay(50);
    down_Allowed = 1;  // button is up again
    Keyboard.releaseAll();
  }


  if (buttonValue3 == LOW && left_Allowed > 0) {
    Keyboard.press(keyboardKeyLeft);
    Serial.println("Button 3 pressed");
    delay(50);
    Keyboard.release(keyboardKeyLeft);
    left_Allowed = 0;  // no button press allowed anymore
  }
  if (buttonValue3 == HIGH) {
    delay(50);
    left_Allowed = 1;  // button is up again
    Keyboard.releaseAll();
  }


  if (buttonValue4 == LOW) {
    Keyboard.press(keyboardKeyRight);
    Serial.println("Button 4 pressed");
    delay(50);
    Keyboard.release(keyboardKeyRight);
    right_Allowed = 0;  // no button press allowed anymore
  }
  if (buttonValue4 == HIGH) {
    delay(50);
    right_Allowed - 1;  // button is up again
    Keyboard.releaseAll();
  }


  if (buttonValue1 == HIGH || buttonValue2 == HIGH || buttonValue3 == HIGH || buttonValue4 == HIGH) {
    Serial.println("   ");  // prints spaces to 'refresh' the serial monitor line
  }

  delay(DEBOUNCE);  // delay in between reads for stability
}
